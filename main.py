import telebot
from telebot import types
import googlesearch
import random

bot = telebot.TeleBot("6374226963:AAHWJ8AgOnS8JIzvmDok4rX-QV1vhNIHGjQ")
user_states = {}



def wait_message():
    arr = ["üí£", "üèÄ", "‚öΩ", "üåö", "üë®‚Äçüíª", "ü§°", "üí¨"]
    return random.choice(arr)

def rand_message(text):
    return "–ú–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å"
    #return googlesearch.search(text)

def start_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    link_reg = types.KeyboardButton("–ó–∞–ø–∏—Å—å –Ω–∞ —Å–¥–∞—á—É")
    link_rep = types.KeyboardButton("–°—Å—ã–ª–∫–∏ –Ω–∞ —É—á–µ–±–Ω—ã–µ github")
    keyboard.add(link_reg, link_rep)
    return keyboard

def reg_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    inf = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
    prog = types.KeyboardButton("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
    alg = types.KeyboardButton("–ê–∏–°–î (–ê–ª–≥–æ—Å—ã)")
    back = types.KeyboardButton("–ù–∞–∑–∞–¥")
    keyboard.add(inf, prog, alg, back)
    return keyboard

def rep_keyboard():
    keyboard = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    inf = types.KeyboardButton("–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞")
    prog = types.KeyboardButton("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
    alg = types.KeyboardButton("–ê–∏–°–î (–ê–ª–≥–æ—Å—ã)")
    infocom = types.KeyboardButton("–ò–Ω—Ñ–æ–ö–æ–º")
    back = types.KeyboardButton("–ù–∞–∑–∞–¥")
    keyboard.add(inf, prog, alg, infocom, back)
    return keyboard

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, {message.from_user.username}, –≤ –ò–Ω—Å—Ç–∏—Ç—É—Ç–µ –¢–µ–ø–ª—ã—Ö –ú—É–∂—Å–∫–∏—Ö –û—Ç–Ω–æ—à–µ–Ω–∏–π."
                                           f"\n–ú–µ–Ω—è –∑–æ–≤—É—Ç It's Moshniy bot.\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=start_keyboard())
    user_id = message.from_user.username
    if user_id == "Kabachok_1":
        bot.send_message(message.from_user.id, "–ê —è –∑–Ω–∞—é, —á—Ç–æ —Ç—ã –õ–µ—à–∞")
    elif user_id == "muthafunk":
        bot.send_message(message.from_user.id, "–ê —è –∑–Ω–∞—é, —á—Ç–æ —Ç—ã –ê—Ä—Ç–µ–º")
    elif user_id == "n_e_q_u_m_a":
        bot.send_message(message.from_user.id, "–ê —è –∑–Ω–∞—é, —á—Ç–æ —Ç—ã –ï–≥–æ—Ä –ì–∞–≥–∞—Ä–∏–Ω")
    user_states[message.from_user.id] = "menu"

@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == "menu")
def menu(message):
    if message.text == "–ó–∞–ø–∏—Å—å –Ω–∞ —Å–¥–∞—á—É":
        bot.send_message(message.from_user.id, wait_message(), reply_markup=reg_keyboard())
        user_states[message.from_user.id] = "write"
    elif message.text == "–°—Å—ã–ª–∫–∏ –Ω–∞ —É—á–µ–±–Ω—ã–µ github":
        bot.send_message(message.from_user.id, wait_message(), reply_markup=rep_keyboard())
        user_states[message.from_user.id] = "github"
    else:
        rand_message(message.text)
        bot.send_message(message.from_user.id, rand_message(message.text))

@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == "write")
def write(message):
    if message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞":
        bot.send_message(message.from_user.id, "https://docs.google.com/spreadsheets/d/1JYlDSwy1Vq476NOECvPuv2WRePUNuDbUh0foLmCudKk/edit#gid=0")
    elif message.text == "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ":
        bot.send_message(message.from_user.id, "https://docs.google.com/spreadsheets/d/15vU7odXOseENO622uKrtHb5fEtA1CyiPgBp7o71w6Jg/edit#gid=0")
    elif message.text == "–ê–∏–°–î (–ê–ª–≥–æ—Å—ã)":
        bot.send_message(message.from_user.id, "https://docs.google.com/spreadsheets/d/1KqvCFxAKWfi1XBONL9vUcadn424o-0GKa3ziSlR94hU/edit#gid=1064470743")
    elif message.text == "–ù–∞–∑–∞–¥":
        bot.send_message(message.from_user.id, wait_message(), reply_markup=start_keyboard())
        user_states[message.from_user.id] = "menu"
    else:
        rand_message(message.text)
        bot.send_message(message.from_user.id, rand_message(message.text))

@bot.message_handler(func=lambda message: user_states.get(message.from_user.id) == "github")
def github(message):
    canansw = ["–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–∏–°–î (–ê–ª–≥–æ—Å—ã)", "–ò–Ω—Ñ–æ–ö–æ–º"]
    if message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞":
        bot.send_message(message.from_user.id, "https://github.com/cs-itmo-2023")
    elif message.text == "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ":
        bot.send_message(message.from_user.id, "https://repeated-squid-629.notion.site/2023-2024-36763ed0edbf4cebbc722bdf21c94db6")
    elif message.text == "–ê–∏–°–î (–ê–ª–≥–æ—Å—ã)":
        bot.send_message(message.from_user.id, "https://github.com/Algorithms-ICT-2023-2024")
    elif message.text == "–ò–Ω—Ñ–æ–ö–æ–º":
        bot.send_message(message.from_user.id, "https://drive.google.com/drive/folders/1TFb_bPQIp8WMBziS-4qtCNUXyylWLdMS")
    elif message.text == "–ù–∞–∑–∞–¥":
        bot.send_message(message.from_user.id, wait_message(), reply_markup=start_keyboard())
        user_states[message.from_user.id] = "menu"
    else:
        rand_message(message.text)
        bot.send_message(message.from_user.id, rand_message(message.text))

bot.polling(none_stop=True, interval=0)
